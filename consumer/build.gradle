plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	//avro generate
	id 'com.github.davidmc24.gradle.plugin.avro-base'  version '1.0.0'
	id 'idea'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

//avro generate
//Intellij wasn't seeing generated java
def generatedSourcesDir = file('src/generated/main/java')
idea {
	module {
		sourceDirs += generatedSourcesDir
		generatedSourceDirs += generatedSourcesDir
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '3.4.0'

//	implementation group: 'org.apache.kafka', name: 'kafka_2.13', version: '3.4.0'
//	implementation 'org.springframework.kafka:spring-kafka:3.0.4'
//	implementation 'org.springframework:spring-context-support:6.0.6'
//	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation "org.apache.avro:avro:1.11.0"
	implementation 'io.confluent:kafka-avro-serializer:7.3.3'
}

//avro generate
def generateAvro = tasks.register("generateAvro", com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask) {
	source("src/main/avro")
	outputDir = file("src/main/java")
	fieldVisibility = "PRIVATE"
	enableDecimalLogicalType = true
}
//avro generate
clean {
	delete "${rootDir}/src/generated/main/java"
}

tasks.named('test') {
	useJUnitPlatform()
}

//avro generate
//tasks.withType(JavaCompile).configureEach {
//	// Make Java compilation tasks depend on the Avro code generation task.
//	dependsOn('generateAvro')
//}